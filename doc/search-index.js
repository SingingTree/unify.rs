var searchIndex = {};
searchIndex['unify'] = {"items":[[0,"","unify",""],[3,"Squash","","Evidence of a proposition where the witness has been forgotten"],[3,"Id","","Evidence of type equality where the proof term is existentially quantified"],[8,"Eq","","The `Eq` trait acts like a type equality predicate"],[10,"completeness","","On demand, provide evidence of the truth of `Eq<A>` in terms\nof provable type-equality of `A` and `Self`. The obligation to\ndefine this method keeps the trait from being implemented in\nother crates in violation of the intended semantics.",0],[11,"coerce","","Given `X: Eq<Y>` and `x: X`, this method will safely coerce\n`x` to type `Y`. The safety comes from the fact that the only\ntime the bound `X: Eq<Y>` holds is when `X` and `Y` are the\nsame type (determined statically).",0],[8,"BiEq","","Bi-directional type-level equality constraint"],[11,"new","","Construct a `Squash` given a reference to a witness",1],[11,"refl","","Construct a proof that type `A` is equal to itself",2],[11,"squash","","Construct a `Squash` from a type equality proof.",2]],"paths":[[8,"Eq"],[3,"Squash"],[3,"Id"]]};
initSearch(searchIndex);
